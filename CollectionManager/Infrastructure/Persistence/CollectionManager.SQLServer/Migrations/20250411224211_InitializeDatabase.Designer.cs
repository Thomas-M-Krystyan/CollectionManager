// <auto-generated />
using System;
using CollectionManager.SQLServer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CollectionManager.SQLServer.Migrations
{
    [DbContext(typeof(CollectionManagerDbContext))]
    [Migration("20250411224211_InitializeDatabase")]
    partial class InitializeDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CollectionManager.SQLServer.Entities.Collectibles.ComicEntity", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<byte>("Age")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(4);

                    b.Property<string>("Authors")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<byte>("Genre")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(3);

                    b.Property<decimal>("ImageId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnOrder(8);

                    b.Property<bool>("IsOwned")
                        .HasColumnType("bit")
                        .HasColumnOrder(6);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(1);

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(7);

                    b.Property<DateOnly>("Published")
                        .HasColumnType("date")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Comics");
                });

            modelBuilder.Entity("CollectionManager.SQLServer.Entities.ImageEntity", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<byte[]>("Bytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(3);

                    b.Property<byte>("Extension")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("CollectionManager.SQLServer.Entities.Collectibles.ComicEntity", b =>
                {
                    b.HasOne("CollectionManager.SQLServer.Entities.ImageEntity", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");
                });
#pragma warning restore 612, 618
        }
    }
}
